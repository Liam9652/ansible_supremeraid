---
- name: Query existing drive groups
  ansible.builtin.command: sudo graidctl ls dg --format=json
  register: existing_dg_output

- name: Parse existing drive groups
  ansible.builtin.set_fact:
    existing_dg_list: "{{ (existing_dg_output.stdout | from_json).Result | map(attribute='DgId') | list }}"

- name: Check if new physical drives are available
  ansible.builtin.fail:
    msg: "No new physical drives found for creating drive groups."
  when: >
    (configure_create_by_numa and not pd_list_by_numa) or
    (configure_create_by_socket | int > 0 and not pd_list_by_socket) or
    (not configure_create_by_numa and configure_create_by_socket | int == 0 and not pd_list_all)

- name: Create drive groups by NUMA
  ansible.builtin.command: >
    sudo graidctl create dg {{ configure_raid_type }} {{ item.value | join(',') }}
    {% if configure_dg_foreground_init %} -z{% endif %}
  loop: "{{ pd_list_by_numa | dict2items }}"
  when: configure_create_by_numa | bool
  register: create_dg_numa_results

- name: Create drive groups by Socket
  ansible.builtin.command: >
    sudo graidctl create dg {{ configure_raid_type }} {{ item.value | join(',') }}
    {% if configure_dg_foreground_init %} -z{% endif %}
  loop: "{{ pd_list_by_socket | dict2items }}"
  when: configure_create_by_socket | int > 0
  register: create_dg_socket_results

- name: Create single drive group
  ansible.builtin.command: >
    sudo graidctl create dg {{ configure_raid_type }} {{ pd_list_all | join(',') }}
    {% if configure_dg_foreground_init %} -z{% endif %}
  when: not configure_create_by_numa and configure_create_by_socket | int == 0
  register: create_dg_single_result

- name: Query new drive groups
  ansible.builtin.command: sudo graidctl ls dg --format=json
  register: new_dg_output

- name: Parse new drive groups and find newly added DgIds
  ansible.builtin.set_fact:
    new_dg_list: "{{ (new_dg_output.stdout | from_json).Result | map(attribute='DgId') | list }}"
    newly_added_dg_list: "{{ (new_dg_output.stdout | from_json).Result | map(attribute='DgId') | list | difference(existing_dg_list) }}"

- name: Verify new drive groups were created
  ansible.builtin.fail:
    msg: "Failed to create any new drive groups."
  when: newly_added_dg_list | length == 0

- name: Wait for drive groups to initialize
  ansible.builtin.command: sudo graidctl ls dg --format=json
  register: dg_status_output
  until: (dg_status_output.stdout | from_json).Result | selectattr('DgId', 'in', newly_added_dg_list) | map(attribute='State') | list | unique == ['OPTIMAL']
  retries: 1000000 # 設置一個非常大的重試次數
  delay: 10 # 每10秒檢查一次
  when: configure_dg_foreground_init | bool

- name: Debug output of newly created drive groups
  ansible.builtin.debug:
    msg: "Newly created drive groups: {{ newly_added_dg_list }}"
