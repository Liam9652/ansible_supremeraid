---
- name: Check file existence
  ansible.builtin.stat:
    path: /tmp/prepared_devices.json
  register: file_stat

- name: Display file stat
  ansible.builtin.debug:
    var: file_stat

- name: Read file content using command
  ansible.builtin.command: cat /tmp/prepared_devices.json
  register: file_content
  changed_when: false
  when: file_stat.stat.exists

- name: Display file content
  ansible.builtin.debug:
    var: file_content
  when: file_stat.stat.exists

- name: Load prepared devices
  ansible.builtin.set_fact:
    prepared_devices: "{{ file_content.stdout | from_json }}"
  when: file_stat.stat.exists

- name: Display prepared devices
  ansible.builtin.debug:
    var: prepared_devices

- name: Query existing physical drives
  become: true
  ansible.builtin.command: graidctl ls pd --format=json
  register: existing_pd_output

- name: Parse existing physical drives
  ansible.builtin.set_fact:
    existing_pd_list: "{{ (existing_pd_output.stdout | from_json).Result | map(attribute='PdId') | list }}"

- name: Create physical drives
  become: true
  ansible.builtin.command: "graidctl create pd {{ item }}"
  loop: "{{ prepared_devices }}"
  register: create_pd_results

- name: Display create PD results
  ansible.builtin.debug:
    var: create_pd_results

- name: Query new physical drives
  become: true
  ansible.builtin.command: graidctl ls pd --format=json
  register: new_pd_output

- name: Parse new physical drives and find newly added PdIds
  ansible.builtin.set_fact:
    new_pd_list: "{{ (new_pd_output.stdout | from_json).Result | map(attribute='PdId') | list }}"
    newly_added_pd_list: "{{ (new_pd_output.stdout | from_json).Result | map(attribute='PdId') | list | difference(existing_pd_list) }}"

- name: Group newly added physical drives by NUMA node
  ansible.builtin.set_fact:
    pd_list_by_numa: "{{ pd_list_by_numa | default({}) | combine({ 
      item.Numa: pd_list_by_numa[item.Numa] | default([]) + [item.PdId]
    }) }}"
  loop: "{{ (new_pd_output.stdout | from_json).Result }}"
  when: 
    - configure_create_by_numa | bool
    - item.PdId in newly_added_pd_list

- name: Group newly added physical drives by CPU socket
  ansible.builtin.set_fact:
    pd_list_by_socket: "{{ pd_list_by_socket | default({}) | combine({ 
      (item.Numa | int // 2): pd_list_by_socket[(item.Numa | int // 2)] | default([]) + [item.PdId]
    }) }}"
  loop: "{{ (new_pd_output.stdout | from_json).Result }}"
  when: 
    - configure_create_by_socket | int > 0
    - item.PdId in newly_added_pd_list

- name: Group all newly added physical drives together
  ansible.builtin.set_fact:
    pd_list_all: "{{ newly_added_pd_list }}"
  when: not configure_create_by_numa and configure_create_by_socket | int == 0

- name: Debug output of newly added PDs
  ansible.builtin.debug:
    msg: 
      - "Newly added PDs: {{ newly_added_pd_list }}"
      - "PDs by NUMA: {{ pd_list_by_numa | default({}) }}"
      - "PDs by Socket: {{ pd_list_by_socket | default({}) }}"
      - "All new PDs: {{ pd_list_all | default([]) }}"

- name: Remove temporary file
  become: true
  ansible.builtin.file:
    path: "/tmp/prepared_devices.json"
    state: absent

