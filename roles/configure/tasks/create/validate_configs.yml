---
- name: Validate PD attributes
  ansible.builtin.assert:
    that:
      - configure_pd_sorting in valid_pd_attributes
      - configure_pd_create_attribute in valid_pd_attributes
    fail_msg: >
      Invalid attributes specified. 
      Sorting attribute: '{{ configure_pd_sorting }}', 
      Create attribute: '{{ configure_pd_create_attribute }}'. 
      Valid options are: {{ valid_pd_attributes | join(', ') }}

- name: Validate RAID type
  ansible.builtin.assert:
    that:
      - configure_raid_type in valid_raid_type
    fail_msg: "Invalid RAID type: {{ configure_raid_type }}. Valid options are: {{ valid_raid_type | join(', ') }}"

- name: Validate DG foreground init
  ansible.builtin.assert:
    that:
      - configure_dg_foreground_init | type_debug == 'bool'
    fail_msg: "configure_dg_foreground_init must be a boolean (true or false)"

- name: Validate DG PD VWC
  ansible.builtin.assert:
    that:
      - configure_dg_pd_vwc in valid_dg_pd_vwc
    fail_msg: "Invalid DG PD VWC value: {{ configure_dg_pd_vwc }}. Valid options are: {{ valid_dg_pd_vwc | join(', ') }}"

- name: Validate DG SPDK BDEV
  ansible.builtin.assert:
    that:
      - configure_dg_spdk_bdev in valid_dg_spdk_bdev
    fail_msg: "Invalid DG SPDK BDEV value: {{ configure_dg_spdk_bdev }}. Valid options are: {{ valid_dg_spdk_bdev | join(', ') }}"

- name: Validate DG journal
  ansible.builtin.assert:
    that:
      - configure_dg_journal in valid_dg_journal
    fail_msg: "Invalid DG journal value: {{ configure_dg_journal }}. Valid options are: {{ valid_dg_journal | join(', ') }}"

- name: Validate DG speed attributes
  ansible.builtin.assert:
    that:
      - configure_dg_rebuild_speed in valid_dg_speed_attributes
      - configure_dg_init_speed in valid_dg_speed_attributes
      - configure_dg_cc_speed in valid_dg_speed_attributes
      - configure_dg_resync_speed in valid_dg_speed_attributes
    fail_msg: "Invalid speed setting. Valid options are: {{ valid_dg_speed_attributes | join(', ') }}"

- name: Validate configure_vd_counts
  ansible.builtin.assert:
    that:
      - configure_vd_counts | int > 0
    fail_msg: "configure_vd_counts must be a positive integer"

- name: Validate configure_vd_size
  ansible.builtin.assert:
    that:
      - configure_vd_size | regex_search('^[0-9]+[KMGT]B$') or configure_vd_size == ''
    fail_msg: "Invalid VD size format. Use format like '500MB', '1GB', '2TB', or leave empty for full capacity"
