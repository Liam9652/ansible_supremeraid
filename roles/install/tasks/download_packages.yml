---
# roles/download_packages/tasks/main.yaml

- name: Check if the graid_package directory exists
  ansible.builtin.stat:
    path: "{{ setup.graid_path }}"
  register: dir_stat
  tags:
    - downloads

- name: Create graid_package directory if it does not exist
  ansible.builtin.file:
    path: "{{ setup.graid_path }}"
    state: directory
    mode: "0755"
  become: true
  when: not dir_stat.stat.exists
  tags:
    - downloads

- name: Check if pre-installer file exists on target
  ansible.builtin.stat:
    path: "{{ setup.graid_path }}{{ linux.pre_installer_url | basename }}"
  register: pre_installer_file
  become: true
  tags:
    - downloads

- name: Display install mode
  ansible.builtin.debug:
    msg: "Install mode is {{ install_mode }}"
  tags:
    - downloads

- name: Check if installer files exist on target
  ansible.builtin.stat:
    path: "{{ setup.graid_path }}{{ item | basename }}"
  with_items: "{{ linux.installer_urls }}"
  register: installer_files
  tags:
    - downloads

- name: Download pre-installer to remote host directly
  ansible.builtin.command:
    cmd: >
      wget
      --no-check-certificate
      -O "{{ setup.graid_path }}{{ linux.pre_installer_url | basename }}"
      "{{ linux.pre_installer_url }}"
  args:
    creates: "{{ setup.graid_path }}{{ linux.pre_installer_url | basename }}"
  register: wget_pre_installer_result
  become: true
  when:
    - install_mode == "online"
    - pre_installer_file.stat.exists is not defined or not pre_installer_file.stat.exists
  tags:
    - downloads

- name: Set correct permissions for pre-installer
  ansible.builtin.file:
    path: "{{ setup.graid_path }}{{ linux.pre_installer_url | basename }}"
    mode: "0755"
  become: true
  when: wget_pre_installer_result is changed
  tags:
    - downloads

- name: Verify downloaded pre-installer
  ansible.builtin.stat:
    path: "{{ setup.graid_path }}{{ linux.pre_installer_url | basename }}"
  register: downloaded_pre_installer
  when: wget_pre_installer_result is changed
  tags:
    - downloads

- name: Fail if pre-installer doesn't exist or is empty
  ansible.builtin.fail:
    msg: "Downloaded pre-installer doesn't exist or is empty"
  when:
    - wget_pre_installer_result is changed
    - not downloaded_pre_installer.stat.exists or downloaded_pre_installer.stat.size == 0
  tags:
    - downloads

- name: Download installers to remote host directly using wget
  ansible.builtin.command:
    cmd: >
      wget
      --no-check-certificate
      -O "{{ setup.graid_path }}{{ item | basename }}"
      "{{ item }}"
  args:
    creates: "{{ setup.graid_path }}{{ item | basename }}"
  register: wget_installer_result
  become: true
  when:
    - install_mode == "online"
    - installer_files.results[loop.index0].stat.exists is not defined or not installer_files.results[loop.index0].stat.exists
  loop: "{{ linux.installer_urls }}"
  loop_control:
    label: "{{ item | basename }}"
  tags:
    - downloads

- name: Set correct permissions for downloaded installers
  ansible.builtin.file:
    path: "{{ setup.graid_path }}{{ item | basename }}"
    mode: "0755"
  loop: "{{ linux.installer_urls }}"
  become: true
  when: wget_installer_result is changed
  tags:
    - downloads

- name: Verify downloaded installer files
  ansible.builtin.stat:
    path: "{{ setup.graid_path }}{{ item | basename }}"
  register: downloaded_installers
  loop: "{{ linux.installer_urls }}"
  become: true
  when: wget_installer_result is changed
  tags:
    - downloads

- name: Fail if any installer file doesn't exist or is empty
  ansible.builtin.fail:
    msg: "Downloaded installer file {{ item.item | basename }} doesn't exist or is empty"
  loop: "{{ downloaded_installers.results }}"
  when:
    - wget_installer_result is changed
    - not item.stat.exists or item.stat.size == 0
  tags:
    - downloads
